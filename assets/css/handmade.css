/* My handmade CSS! Where I actually know what all of it does! */

/*
Declare some colors that I can use throughout
*/
:root {
  --page-background: #CAD7E3;
  --page-text: #212529;
  --navbar-background: #558BDD;
  --navbar-hover: #4777bf;
  --navbar-current: #0E2444;
  --navbar-text: white;
  --favicon-hover-color: #808080;
  --hr-color: rgba(0, 0, 0, .1);
  --vr-color: #dee2e6;
  --scrollbar-thumb-color: #adbecf;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--page-text);
  text-align: left;
  background-color: var(--page-background);
}

::-webkit-scrollbar {
  background-color: var(--page-background);
}

::-webkit-scrollbar-thumb {
  background: var(--scrollbar-thumb-color);
  border-radius: 10px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: .5rem;
  font-weight: 500;
  line-height: 1.2
}

h1 {
  font-size: 2.5rem
}

h2 {
  font-size: 2rem
}

h3 {
  font-size: 1.75rem
}

h4 {
  font-size: 1.5rem
}

h5 {
  font-size: 1.25rem
}

h6 {
  font-size: 1rem
}

b,
strong {
  font-weight: bolder
}

dl,
ol,
ul,
p {
  margin-top: 0;
  margin-bottom: 1rem
}

/* nothing for li, defaults are fine */

/* Default link appearance is annoying, so redoing that */
a {
  color: var(--page-text);
  /* Hyperlinks same color as the rest of the text */
  font-weight: 500;
  /* Hyperlinks bold */
  text-decoration: none;
  /* Hyperlinks not underlined */
  background-color: transparent
    /* Hyperlinks don't have weird highlighting */
}

@media (hover: hover) {
  a:hover {
    text-decoration: underline
  }

  /* Class to remove default "underline on hover" behavior for links  */
  a.a-no-underline:hover {
    text-decoration: none
  }

  /* Class to change link color when hovering  */
  a.favicon-hover:hover {
    color: var(--favicon-hover-color)
  }
}

/* Used to keep favicons from getting scrunched up */
i.favicon-sizing {
  padding-left: .15rem;
  padding-right: .15rem;
  font-size: 28px;
}

/* Custom navbar */
.nav-outer {
  list-style-type: none;
  margin: auto;
  padding: 0;
  width: 80%;
  max-width: 300px;
  background-color: var(--navbar-background);
}

.nav-inner {
  display: block;
  color: var(--navbar-text);
  padding: 8px 16px;
  text-align: center;
  text-decoration: none;
}

@media (hover: hover) {
  .nav-inner:hover:not(.current-page) {
    background-color: var(--navbar-hover);
    color: var(--navbar-text);
  }

  .nav-inner:hover {
    text-decoration: none;
  }
}

.current-page {
  background-color: var(--navbar-current);
  color: var(--navbar-text);
  text-decoration: none;
}

/* I should test if I need these! */
footer,
main {
  display: block
}

footer {
  font-size: smaller
}

/* Make horizontal rules look nice. I pretty much always use the hr-60pct version */
hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  border-top: 1px solid var(--hr-color)
}

hr.hr-60pct {
  width: 60%
}

/*
think about font families - maybe put those up in :root?
Also, might need a word-wrap or something for pre if things look weird
*/
code,
pre {
  font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 0.875em; /* Otherwise the code looks weirdly big! */
}

/*
Probably makes sense to move some/all of this to a separate class!!
For now, treating this as default image styling
*/
img {
  vertical-align: middle;
  border-style: none;
  max-width: 80%;
  max-height: 80%;
  object-fit: contain;
}

img.rounded {
  border-radius: .25rem
}

/* hidden, show-when-wide, and show-when narrow govern the narrow-screen and wide-screen versions of a layout */
.hidden {
  display: none
}

@media (min-width: 991px) {
  div.show-when-wide {
    display: block
  }
}

@media (max-width: 992px) {
  div.show-when-narrow {
    display: block
  }
}

/* Basic site content building blocks */
.container-80pct {
  width: 80%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}

.d-flex {
  display: -ms-flexbox;
  display: flex
}

.row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px
}

.flex-row {
  display: flex;
  flex-direction: row
}

.col-from-variable {
  max-width: var(--width)
}

.col {
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 0;

  position: relative;
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
}

.flex-column {
  display: flex;
  flex-direction: column
}

.align-items-center {
  align-items: center
}

.align-self-center {
  align-self: center
}

.justify-content-center {
  justify-content: center
}

.text-center {
  text-align: center
}

/* Essentially a vertical rule */
.vr-workaround {
  border-left: 1px solid var(--vr-color);
  height: 95vh
}

.pad-lr-3rem {
  padding-left: 3rem;
  padding-right: 3rem;
}

.pad-tb-3rem {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

/*
These two classes allow part of a page to scroll and another part to not scroll.
*/
.vh-100 {
  height: 100vh
}

.mh-100 {
  max-height: 100%;
  scrollbar-color: var(--page-background) white;

}

/* Class for the active and inactive experiences */
.active {
  font-weight: bolder;
}

.inactive {
  opacity: 0.5;
}

/* 
Override the ugly default button styles
Buttons now just look like regular text
*/
button.btn {
  color: inherit;
  text-align: inherit;
  font-size: inherit;
  background-color: inherit;
  border: inherit;
  padding-left: inherit;
}

/* Add this class to buttons with active event listeners */
button.btn.clickable:hover {
  text-decoration: underline;
}